syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.example.tictactoe";
option java_outer_classname = "TicTacToeProto";

service TicTacToe {
  rpc CreateRoom(CreateRoomRequest) returns (RoomResponse);// Создание комнаты. Возвращает ID комнаты или ошибку
  rpc ListRooms(Empty) returns (RoomList);// Получение списка доступных комнат
  rpc JoinRoom(JoinRoomRequest) returns (stream GameState);// Присоединение к комнате. Сервер отправляет поток обновлений состояния
  rpc MakeMove(Move) returns (MoveResult);// Отправка хода игрока. Возвращает результат выполнения
  rpc LeaveRoom(LeaveRequest) returns (Empty);// Выход игрока из комнаты

}

message CreateRoomRequest {
  string room_name = 1;
}

message JoinRoomRequest {
  string room_id = 1;
  string player_name = 2;
}

message RoomResponse {
  bool success = 1;
  string message = 2; //Об ошибке если что-то сломается
  string room_id = 3;
}

message RoomList {
  repeated RoomInfo rooms = 1;
}

message RoomInfo {
  string room_id = 1;
  string room_name = 2;
  int32 players_count = 3;
  string status = 4;      // Статус: "WAITING", "IN_PROGRESS", "FINISHED"
}

message GameState {
  string game_id = 1;
  repeated string board = 2;  //Поле 3x3
  string current_player = 3;  //Чей сейчас ход
  string status = 4;          //Ход, победа, ничья, соперник покинул и так далее
  string player_symbol = 5;
  int32 players_count = 6;
}

message Move {
  string game_id = 1;
  string player_name = 2;
  int32 position = 3;
}

message MoveResult {
  bool success = 1;
  string message = 2;
}

message LeaveRequest {
  string room_id = 1;
  string player_name = 2;
}

message Empty {}   // Пустой запрос/ответ